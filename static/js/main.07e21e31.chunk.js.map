{"version":3,"sources":["api/progressBarsApi.ts","components/Progress/_actions.ts","components/Progress/_reducer.ts","store/configureStore.ts","store/rootReducer.ts","components/Page/index.tsx","components/Progress/Bar.tsx","components/Button/index.tsx","components/Progress/Controls.tsx","components/Progress/index.tsx","pages/ProgressBarDemo/index.tsx","common/css-helpers.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["getProgressBarsData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","results","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","receiveProgressBarsConfig","type","config","receivedAt","Date","now","setSelectedBar","selected","updateProgressBar","valueToAdd","length","undefined","initialState","bars","isFetching","progressBarsReducer","state","action","assign","lastUpdated","bar","find","b","id","console","log","newValue","value","push","configureStore","history","createStore","combineReducers","router","connectRouter","progressBars","rootReducer","compose","applyMiddleware","routerMiddleware","thunkMiddleware","loggerMiddleware","Page","props","componentClass","classNames","className","react_default","createElement","children","connect","ownProps","_state$progressBars","limit","currBar","_ref$value","objectSpread","_props$value","_props$valueToAdd","pctValue","Math","round","barInnerRef","React","dispatch","updateProgressBarInner","current","barWidth","style","transform","concat","transitionDuration","abs","progress__bar--active","progress__bar--over","react","onClick","ref","Button","buttonRef","useRef","e","button","ripple","document","classList","add","top","clientY","offsetTop","window","pageYOffset","left","clientX","offsetLeft","pageXOffset","appendChild","setTimeout","remove","showRipple","barData","buttons","sort","selectedBar","Children","map","_b$props","_b$props$value","n","components_Button","key","i","Progress_Bar","useEffect","_x","defaultActive","Progress_Controls","targetPx","ProgressBarWrapper","styled","div","_templateObject","basePx","parseFloat","toFixed","em","H1","h1","_templateObject2","Home","components_Page","Progress","App","Fragment","Helmet","titleTemplate","defaultTitle","name","content","react_router","exact","path","component","ProgressBarDemo","Boolean","location","hostname","match","createBrowserHistory","store","ReactDOM","render","es","esm","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07e21e31.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const getProgressBarsData = async () => {\r\n\tlet results = await axios.get('http://pb-api.herokuapp.com/bars') as any;\r\n\treturn results.data;\r\n};\r\n","import { getProgressBarsData } from '../../api/progressBarsApi';\r\n\r\nexport const REQUEST_PROGRESS_BARS_CONFIG = 'REQUEST_PROGRESS_BARS_CONFIG';\r\nexport const RECEIVE_PROGRESS_BARS_CONFIG = 'RECEIVE_PROGRESS_BARS_CONFIG';\r\nexport const SET_SELECTED_BAR = 'SET_SELECTED_BAR';\r\nexport const UPDATE_PROGRESS_BAR = 'UPDATE_PROGRESS_BAR';\r\n\r\nexport const requestProgressBarsConfig = () => {\r\n\treturn {\r\n\t\ttype: REQUEST_PROGRESS_BARS_CONFIG,\r\n\t}\r\n};\r\n\r\nexport const receiveProgressBarsConfig = (data: any) => {\r\n\treturn {\r\n\t\ttype: RECEIVE_PROGRESS_BARS_CONFIG,\r\n\t\tconfig: data,\r\n\t\treceivedAt: Date.now(),\r\n\t};\r\n};\r\n\r\nexport const fetchProgressBarsConfig = () => {\r\n\treturn async (dispatch: Function) => {\r\n\t\tdispatch(requestProgressBarsConfig());\r\n\t\tlet data = await getProgressBarsData();\r\n\t\treturn dispatch(receiveProgressBarsConfig(data));\r\n\t}\r\n};\r\n\r\nexport const setSelectedBar = (selected: string) => ({\r\n\ttype: SET_SELECTED_BAR,\r\n\tselected,\r\n});\r\n\r\nexport const updateProgressBar = (selected: string, valueToAdd = 0) => ({\r\n\ttype: UPDATE_PROGRESS_BAR,\r\n\tselected,\r\n\tvalueToAdd,\r\n});\r\n","import {\r\n\tRECEIVE_PROGRESS_BARS_CONFIG,\r\n\tREQUEST_PROGRESS_BARS_CONFIG,\r\n\tSET_SELECTED_BAR,\r\n\tUPDATE_PROGRESS_BAR,\r\n} from './_actions';\r\n\r\ninterface IBar {\r\n\tid: string;\r\n\tvalue: number;\r\n}\r\n\r\nconst initialState = {\r\n\tbars: [] as IBar[],\r\n\tconfig: undefined,\r\n\tisFetching: true,\r\n\tselected: undefined,\r\n\tvalueToAdd: 0,\r\n};\r\n\r\nconst progressBarsReducer = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_PROGRESS_BARS_CONFIG:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tisFetching: true,\r\n\t\t\t});\r\n\r\n\t\tcase RECEIVE_PROGRESS_BARS_CONFIG:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\tconfig: action.config,\r\n\t\t\t\tlastUpdated: action.receivedAt,\r\n\t\t\t});\r\n\r\n\t\tcase SET_SELECTED_BAR:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tselected: action.selected,\r\n\t\t\t});\r\n\r\n\t\tcase UPDATE_PROGRESS_BAR: {\r\n\t\t\tconst { selected, valueToAdd } = action;\r\n\t\t\tconst { bars } = state;\r\n\t\t\tconst bar = bars.find((b: IBar) => b.id === selected);\r\n\r\n\t\t\tconsole.log('dog', state);\r\n\r\n\t\t\tif (!bar) {\r\n\t\t\t\tbars.push({\r\n\t\t\t\t\tid: selected,\r\n\t\t\t\t\tvalue: valueToAdd > 0 ? valueToAdd : 0,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tlet newValue = bar.value + valueToAdd;\r\n\t\t\t\tbar.value = newValue < 0 ? 0 : newValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tselected,\r\n\t\t\t\tvalueToAdd,\r\n\t\t\t\tbars,\r\n\t\t\t});\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default progressBarsReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport loggerMiddleware from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst configureStore = (initialState: any, history: any) => {\r\n\treturn createStore(\r\n\t\trootReducer(history),\r\n\t\tinitialState,\r\n\t\tcompose(\r\n\t\t\tapplyMiddleware(\r\n\t\t\t\trouterMiddleware(history),\r\n\t\t\t\tthunkMiddleware,\r\n\t\t\t\tloggerMiddleware,\r\n\t\t\t),\r\n\t\t),\r\n\t);\r\n};\r\n\r\nexport default configureStore;\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport progressBarsReducer from '../components/Progress/_reducer';\r\n\r\nexport default (history: any) =>\r\n\tcombineReducers({\r\n\t\trouter: connectRouter(history),\r\n\t\tprogressBars: progressBarsReducer,\r\n\t});\r\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n\tchildren: ReactNode;\n\tclassName?: string;\n}\n\nconst Page: React.FC<IProps> = (props) => {\n\tconst componentClass = classNames(props.className, 'page');\n\treturn <div className={componentClass}>{props.children}</div>;\n};\n\nexport default Page;\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport { setSelectedBar, updateProgressBar } from './_actions';\r\nimport './_progress.scss';\r\n\r\nexport interface IBar {\r\n\tid: string;\r\n\tselected?: string;\r\n\tdispatch: Function;\r\n\tlimit: number;\r\n\tonClick?: Function;\r\n\tvalue?: number;\r\n\tvalueToAdd?: number;\r\n}\r\n\r\nconst Bar: React.FC<IBar> = (props) => {\r\n\tconst { id, value = 0, valueToAdd = 0, limit } = props;\r\n\tconst pctValue = Math.round(value / limit * 100);\r\n\tconst barInnerRef = React.useRef<HTMLSpanElement>(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tprops.dispatch(updateProgressBar(id, props.value));\r\n\t}, []);\r\n\r\n\tReact.useEffect(() => {\r\n\t\t//props.dispatch(updateProgressBar(id, props.value));\r\n\t\tupdateProgressBarInner(value);\r\n\t}, [props.value]);\r\n\r\n\tconst updateProgressBarInner = (value: number) => {\r\n\t\tconst bar = barInnerRef.current;\r\n\t\tif (bar) {\r\n\t\t\tconst barWidth = pctValue / 100;\r\n\t\t\tbar.style.transform = `scaleX(${barWidth})`;\r\n\t\t\tbar.style.transitionDuration = `${Math.abs(valueToAdd / 100)}s`;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tprops.dispatch(setSelectedBar(props.id));\r\n\t};\r\n\r\n\tconst componentClass = classNames('progress__bar', {\r\n\t\t'progress__bar--active': props.id === props.selected,\r\n\t\t'progress__bar--over': value > limit,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div id={id} className={componentClass} onClick={handleClick}>\r\n\t\t\t<span className=\"progress__bar-outer\">\r\n\t\t\t\t<span className=\"progress__bar-inner\" ref={barInnerRef} />\r\n\t\t\t\t<span className=\"progress__bar-label\">{pctValue}%</span>\r\n\t\t\t</span>\r\n\t\t\t<span className=\"progress__bar-legend\">{value} / {limit}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n\tconst { selected, bars, valueToAdd, config } = state.progressBars;\r\n\tconst { limit } = config;\r\n\tconst currBar = bars.find((b: any) => b.id === ownProps.id);\r\n\tlet { value = 0 } = currBar ? currBar : ownProps;\r\n\r\n\treturn {\r\n\t\tselected,\r\n\t\tvalue,\r\n\t\tvalueToAdd,\r\n\t\tlimit,\r\n\t\t...state,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Bar);\r\n","import React from 'react';\nimport classNames from 'classnames';\nimport './_button.scss';\n\ninterface IButton {\n\tclassName?: string;\n\tvalue: number;\n\tonClick: any,\n}\n\nconst Button: React.FC<IButton> = (props) => {\n\tconst buttonRef = React.useRef<HTMLButtonElement>(null);\n\n\tconst showRipple = (e: React.MouseEvent) => {\n\t\tconst button = buttonRef.current;\n\t\tif (button) {\n\t\t\tconst ripple = document.createElement('div');\n\t\t\tripple.classList.add('button__ripple');\n\t\t\tripple.style.top = `${e.clientY - button.offsetTop + window.pageYOffset}px`;\n\t\t\tripple.style.left = `${e.clientX - button.offsetLeft + window.pageXOffset}px`;\n\t\t\tbutton.appendChild(ripple);\n\t\t\tsetTimeout(()=>{ripple.remove()},10000);\n\t\t}\n\t};\n\n\tconst handleClick = (e: React.MouseEvent) => {\n\t\tshowRipple(e);\n\t\tif (props.onClick) {\n\t\t\tprops.onClick();\n\t\t}\n\t};\n\n\tconst componentClass = classNames(\n\t\tprops.className,\n\t\t'button',\n\t);\n\n\treturn (\n\t\t<button\n\t\t\tclassName={componentClass}\n\t\t\tref={buttonRef}\n\t\t\tonClick={handleClick}\n\t\t\tvalue={props.value}\n\t\t>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import React, { ReactElement, ReactNode } from 'react';\nimport { connect } from 'react-redux';\nimport { updateProgressBar } from './_actions';\nimport './_progress.scss';\nimport Button from '../../components/Button';\nimport { IBar } from './Bar';\n\ninterface IProps {\n\tbars: ReactElement<IBar>[];\n\tbarData: number[];\n\tbuttons?: number[];\n\tlimit?: number;\n\tdispatch: Function;\n\tselected: string;\n}\n\nconst Controls: React.FC<IProps> = (props) => {\n\tconst { buttons } = props;\n\n\tconst selectedBar = React.Children.map(props.bars, (b) => {\n\t\tconst { id, value = 0 } = b.props;\n\t\treturn { id, value };\n\t}).find((b) => b.id === props.selected);\n\n\tconst handleClick = (valueToAdd: number) => {\n\t\tif (selectedBar) {\n\t\t\tprops.dispatch(updateProgressBar(props.selected, valueToAdd));\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"progress__controls\">\n\t\t\t{(buttons || []).map((n: number) => (\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"progress__button\"\n\t\t\t\t\tvalue={n}\n\t\t\t\t\tonClick={() => handleClick(n)}\n\t\t\t\t\tkey={`progress_button__${n}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n\tconst { selected, config } = state.progressBars;\n\t//\n\tlet barData,\n\t\tbuttons = [];\n\tif (config) {\n\t\tbarData = config.bars;\n\t\tbuttons = config.buttons.sort((a: number, b: number) => {\n\t\t\treturn a - b;\n\t\t});\n\t}\n\treturn { selected, barData, buttons, ...ownProps };\n};\n\nexport default connect(mapStateToProps)(Controls);\n","import React, { ReactElement, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchProgressBarsConfig, setSelectedBar } from './_actions';\nimport './_progress.scss';\nimport Bar, { IBar } from './Bar';\nimport Controls from './Controls';\n\ninterface IProgressBar {\n\tbarData: number[];\n\tchildren: ReactElement<IBar>[];\n\tdispatch: Function;\n\tselected?: string;\n\tconfig?: any;\n\tisFetching?: boolean;\n\tlastUpdated?: string;\n}\n\nconst ProgressBar: React.FC<IProgressBar> = (props) => {\n\tconst { isFetching, barData } = props;\n\n\tconst bars =\n\t\t(barData || []).map((n: number, i: number) => (\n\t\t\t<Bar id={`bar__${i}`} key={`bar__${i}`} value={n} />\n\t\t));\n\n\t// grab data on load via redux\n\tReact.useEffect(() => {\n\t\tprops.dispatch(fetchProgressBarsConfig());\n\t}, []);\n\n\t// set first element as default selected\n\tReact.useEffect(() => {\n\t\tif (bars &&  bars[0]) {\n\t\t\tconst defaultActive = bars[0];\n\t\t\tprops.dispatch(setSelectedBar(defaultActive.props.id));\n\t\t}\n\t}, [bars]);\n\n\n\treturn (\n\t\t<div className=\"progress\">\n\t\t\t{bars}\n\t\t\t<Controls bars={bars} />\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n\tconst { config, lastUpdated, isFetching } = state.progressBars;\n\tlet barData = [];\n\tif (config) {\n\t\tbarData = config.bars;\n\t}\n\treturn { config, barData, lastUpdated, isFetching, ...ownProps };\n};\n\nexport default connect(mapStateToProps)(ProgressBar);\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { em, rem } from '../../common/css-helpers';\r\nimport Page from '../../components/Page';\r\nimport ProgressBar from '../../components/Progress';\r\nimport Bar from '../../components/Progress/Bar';\r\n\r\nconst ProgressBarWrapper = styled.div`\r\n\tdisplay: flex;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tmax-width: ${em(480)};\r\n\tmargin: 0 auto;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n\tfont-size: ${rem(24)};\r\n\talign-self: flex-start;\r\n`;\r\n\r\nconst Home: React.FC = () => {\r\n\treturn (\r\n\t\t<Page>\r\n\t\t\t<ProgressBarWrapper>\r\n\t\t\t\t<H1>Progress bar</H1>\r\n\t\t\t\t<ProgressBar>\r\n\t\t\t\t\t<Bar id=\"bar_1\" />\r\n\t\t\t\t\t<Bar id=\"bar_2\" />\r\n\t\t\t\t\t<Bar id=\"bar_3\" />\r\n\t\t\t\t</ProgressBar>\r\n\t\t\t</ProgressBarWrapper>\r\n\t\t</Page>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","const DEFAULT_BASE_PX = 16;\n\nexport const em = (targetPx: number, basePx: number = DEFAULT_BASE_PX) => {\n\tif (targetPx === 0) return 0;\n\tif (basePx === 0) basePx = DEFAULT_BASE_PX;\n\treturn `${parseFloat((targetPx / basePx).toFixed(3))}em`;\n};\n\nexport const rem = (targetPx: number) => {\n\tif (targetPx === 0) return 0;\n\treturn `${parseFloat((targetPx / DEFAULT_BASE_PX).toFixed(3))}rem`;\n};\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route } from 'react-router-dom';\nimport 'sanitize.css';\nimport './themes/light/style.scss';\nimport ProgressBarDemo from './pages/ProgressBarDemo';\n\nconst App: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Helmet titleTemplate=\"Ray Ranola - %s\" defaultTitle=\"Ray Ranola - Progress Bar Demo\">\n        <meta name=\"description\" content=\"\"/>\n      </Helmet>\n      <main className=\"main\">\n        <Switch>\n          <Route exact path=\"/\" component={ProgressBarDemo}/>\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst history = createBrowserHistory();\r\nconst store = configureStore({}, history);\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<ConnectedRouter history={history}>\r\n\t\t\t<App />\r\n\t\t</ConnectedRouter>\r\n\t</Provider>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}